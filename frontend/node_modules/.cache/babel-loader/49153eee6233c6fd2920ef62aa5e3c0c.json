{"ast":null,"code":"import _regeneratorRuntime from \"/Users/heathercapati/Desktop/Redwood/CRM_Project/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/heathercapati/Desktop/Redwood/CRM_Project/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { GET_CUSTOMERS, ADD_CUSTOMER, DELETE_CUSTOMER, GET_LEADS, ADD_LEAD, DELETE_LEAD } from '../constants';\nexport var getCustomers = function getCustomers() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('http://localhost:5000/api/customers');\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: GET_CUSTOMERS,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getLeads = function getLeads() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get('http://localhost:5000/api/leads');\n\n              case 2:\n                response = _context2.sent;\n                dispatch({\n                  type: GET_LEADS,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var addCustomer = function addCustomer(customer) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.post('http://localhost:5000/api/customers', customer);\n\n              case 2:\n                response = _context3.sent;\n                console.log(response);\n                dispatch({\n                  type: ADD_CUSTOMER,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var addLead = function addLead(lead) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.post('http://localhost:5000/api/leads', lead);\n\n              case 2:\n                response = _context4.sent;\n                dispatch({\n                  type: ADD_LEAD,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteCustomer = function deleteCustomer(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.delete(\"http://localhost:5000/api/customers/\".concat(id));\n\n              case 2:\n                response = _context5.sent;\n                dispatch({\n                  type: DELETE_CUSTOMER,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteLead = function deleteLead(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return axios.delete(\"http://localhost:5000/api/leads/\".concat(id));\n\n              case 2:\n                response = _context6.sent;\n                dispatch({\n                  type: DELETE_LEAD,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/heathercapati/Desktop/Redwood/CRM_Project/frontend/src/actions/index.js"],"names":["axios","GET_CUSTOMERS","ADD_CUSTOMER","DELETE_CUSTOMER","GET_LEADS","ADD_LEAD","DELETE_LEAD","getCustomers","dispatch","get","response","type","payload","data","getLeads","addCustomer","customer","post","console","log","addLead","lead","deleteCustomer","id","delete","deleteLead"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {\n    GET_CUSTOMERS,\n    ADD_CUSTOMER,\n    DELETE_CUSTOMER,\n    GET_LEADS,\n    ADD_LEAD,\n    DELETE_LEAD,\n} from '../constants';\n\nexport const getCustomers = () => async dispatch => {\n    let response = await axios.get('http://localhost:5000/api/customers');\n    dispatch({ type: GET_CUSTOMERS, payload: response.data })\n}\n\nexport const getLeads = () => async dispatch => {\n    let response = await axios.get('http://localhost:5000/api/leads');\n    dispatch({ type: GET_LEADS, payload: response.data })\n}\n\nexport const addCustomer = customer => async dispatch => {\n    let response = await axios.post('http://localhost:5000/api/customers', customer);\n    console.log(response);\n    dispatch({ type: ADD_CUSTOMER, payload: response.data })\n}\n\nexport const addLead = lead => async dispatch => {\n    let response = await axios.post('http://localhost:5000/api/leads', lead);\n    dispatch({ type: ADD_LEAD, payload: response.data })\n}\n\nexport const deleteCustomer = id => async dispatch => {\n    let response = await axios.delete(`http://localhost:5000/api/customers/${id}`);\n    dispatch({ type: DELETE_CUSTOMER, payload: response.data })\n}\n\nexport const deleteLead = id => async dispatch => {\n    let response = await axios.delete(`http://localhost:5000/api/leads/${id}`);\n    dispatch({ type: DELETE_LEAD, payload: response.data })\n}"]},"metadata":{},"sourceType":"module"}